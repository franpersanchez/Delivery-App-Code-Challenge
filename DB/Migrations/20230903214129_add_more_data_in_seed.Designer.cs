// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(DeliveryAppContext))]
    [Migration("20230903214129_add_more_data_in_seed")]
    partial class add_more_data_in_seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DB.Models.Envio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("VehiculoId")
                        .HasColumnType("bigint");

                    b.Property<string>("ZonaPostal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Envios");
                });

            modelBuilder.Entity("Delivery_App_Code_Challenge.DB.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ubicacion_latitud")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ubicacion_longitud")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Apellidos = "Perez",
                            Email = "franpersanchez@gmail.com",
                            Nombre = "Fran",
                            Telefono = "+34 667202163",
                            Ubicacion_latitud = "2342N",
                            Ubicacion_longitud = "324E"
                        },
                        new
                        {
                            Id = 2L,
                            Apellidos = "Acedo",
                            Email = "martaab@gmail.com",
                            Nombre = "Marta",
                            Telefono = "+34 665412984",
                            Ubicacion_latitud = "1232132N",
                            Ubicacion_longitud = "324E"
                        });
                });

            modelBuilder.Entity("Delivery_App_Code_Challenge.DB.Models.Pedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Commentarios")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("EnvioId")
                        .HasColumnType("bigint");

                    b.Property<int>("EstadoPedido")
                        .HasColumnType("integer");

                    b.Property<string>("HoraCreacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("VehiculoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EnvioId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClienteId = 1L,
                            Commentarios = "Amazon, urgente!",
                            EstadoPedido = 0,
                            HoraCreacion = "2023-09-03-22:55"
                        },
                        new
                        {
                            Id = 2L,
                            ClienteId = 2L,
                            Commentarios = "El corte ingles",
                            EstadoPedido = 0,
                            HoraCreacion = "2023-09-01-15:55"
                        },
                        new
                        {
                            Id = 3L,
                            ClienteId = 2L,
                            Commentarios = "Fnac",
                            EstadoPedido = 0,
                            HoraCreacion = "2023-08-03-23:55"
                        });
                });

            modelBuilder.Entity("Delivery_App_Code_Challenge.DB.Models.RegistroUbicacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("FechaRegistro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ubicacion_latitud")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ubicacion_longitud")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("VehiculoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehiculoId");

                    b.ToTable("RegistroUbicacion");
                });

            modelBuilder.Entity("Delivery_App_Code_Challenge.DB.Models.Vehiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreConductor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehiculos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Matricula = "418GZK",
                            NombreConductor = "Ivan Ruiz"
                        },
                        new
                        {
                            Id = 2L,
                            Matricula = "345HJU",
                            NombreConductor = "Lolo Sanchez"
                        });
                });

            modelBuilder.Entity("DB.Models.Envio", b =>
                {
                    b.HasOne("Delivery_App_Code_Challenge.DB.Models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Delivery_App_Code_Challenge.DB.Models.Pedido", b =>
                {
                    b.HasOne("Delivery_App_Code_Challenge.DB.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB.Models.Envio", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("EnvioId");

                    b.HasOne("Delivery_App_Code_Challenge.DB.Models.Vehiculo", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("VehiculoId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Delivery_App_Code_Challenge.DB.Models.RegistroUbicacion", b =>
                {
                    b.HasOne("Delivery_App_Code_Challenge.DB.Models.Vehiculo", "Vehiculo")
                        .WithMany("RegistroUbicaciones")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("DB.Models.Envio", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Delivery_App_Code_Challenge.DB.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Delivery_App_Code_Challenge.DB.Models.Vehiculo", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("RegistroUbicaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
